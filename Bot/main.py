import openai
from telebot.types import Message

from config_data.config import OPENAI_API_KEY, bot
from dialog_manager import save_dialog, load_dialog_context

openai.api_key = OPENAI_API_KEY

MAX_TELEGRAM_MSG_LENGTH = 4096


def send_long_message(chat_id, text):
    for i in range(0, len(text), MAX_TELEGRAM_MSG_LENGTH):
        bot.send_message(chat_id=chat_id, text=text[i : i + MAX_TELEGRAM_MSG_LENGTH])


@bot.message_handler(commands=["start"])
def send_welcome(message: Message):
    bot.reply_to(
        message,
        "–ü—Ä–∏–≤–µ—Ç!\n–Ø ChatGPT-4o Telegram Bot ü§ñ\n–ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å",
    )


@bot.message_handler(commands=["info"])
def bot_info(message: Message):
    bot.reply_to(message, "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ChatGPT 4o-mini. –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ 8192 —Å–∏–º–≤–æ–ª–∞.")


@bot.message_handler(commands=["help"])
def bot_help(message: Message):
    text = (
        "–ö–æ–º–∞–Ω–¥—ã:\n" "/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n" "/help - –°–ø—Ä–∞–≤–∫–∞\n" "/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n" "/donate - –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"
    )
    bot.reply_to(message, text)


@bot.message_handler(commands=["donate"])
def bot_donate(message: Message):
    bot.reply_to(message, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è! –î–ª—è –¥–æ–Ω–∞—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ https://t.me/dan4eg")


@bot.message_handler(func=lambda _: True)
def handle_message(message: Message):
    user_id = message.from_user.id
    prompt = message.text

    dialog_id = 'current_dialog_id'
    context = load_dialog_context(user_id, dialog_id)

    messages = []
    for msg in context:
        messages.append({"role": "user", "content": msg['prompt']})
        messages.append({"role": "assistant", "content": msg['response']})
    messages.append({"role": "user", "content": prompt})

    processing_msg = bot.send_message(user_id, "–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...")

    try:
        completion = openai.chat.completions.create(
            model="gpt-4.1",
            messages=messages,
            temperature=0.9,
        )
        response = completion.choices[0].message.content
    except Exception as e:
        response = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI: {e}"

    try:
        bot.delete_message(chat_id=user_id, message_id=processing_msg.message_id)
    except Exception:
        pass

    save_dialog(user_id, dialog_id, prompt, response)
    send_long_message(chat_id=user_id, text=response)


if __name__ == '__main__':
    bot.infinity_polling()
